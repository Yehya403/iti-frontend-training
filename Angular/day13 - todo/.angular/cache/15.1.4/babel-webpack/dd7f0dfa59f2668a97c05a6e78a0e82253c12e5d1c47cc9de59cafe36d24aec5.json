{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"text-decoration\": a0\n  };\n};\nfunction ListComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 3)(1, \"span\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_2_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deleteTask(i_r2));\n    });\n    i0.ɵɵtext(5, \" Delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_2_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.changeTaskStatus(i_r2));\n    });\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, task_r1.isComplete ? \"line-through\" : \"\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r1.taskLabel);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.isComplete ? \"Incomplete\" : \"Complete\", \" \");\n  }\n}\nexport class ListComponent {\n  constructor() {\n    this.deleteTaskEmitter = new EventEmitter();\n    this.completeTaskEmitter = new EventEmitter();\n  }\n  deleteTask(index) {\n    this.tasks.splice(index, 1);\n    this.deleteTaskEmitter.emit(this.tasks);\n  }\n  changeTaskStatus(index) {\n    this.completeTaskEmitter.emit(index);\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)();\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  inputs: {\n    tasks: \"tasks\"\n  },\n  outputs: {\n    deleteTaskEmitter: \"deleteTaskEmitter\",\n    completeTaskEmitter: \"completeTaskEmitter\"\n  },\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"mt-5\", \"p-4\"], [1, \"list-unstyled\", \"w-50\"], [\"class\", \"p-3 bg-secondary bg-gradient d-flex justify-content-between align-items-center my-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-3\", \"bg-secondary\", \"bg-gradient\", \"d-flex\", \"justify-content-between\", \"align-items-center\", \"my-2\"], [1, \"text-white\", 3, \"ngStyle\"], [1, \"btn\", \"bg-danger\", \"text-white\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-success\", \"text-white\", 3, \"click\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"ul\", 1);\n      i0.ɵɵtemplate(2, ListComponent_li_2_Template, 8, 5, \"li\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgStyle],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;;;;;;;;;;;ICElEC,6BAGC;IAIIA,YAAoB;IAAAA,iBACtB;IACDA,2BAAK;IAC2CA;MAAA;MAAA;MAAA;MAAA,OAASA,sCAAa;IAAA,EAAC;IACnEA,wBACF;IAAAA,iBAAS;IACTA,iCAGC;IADCA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAE7BA,YACF;IAAAA,iBAAS;;;;IAZTA,eAAwE;IAAxEA,8FAAwE;IACvEA,eAAoB;IAApBA,uCAAoB;IAUnBA,eACF;IADEA,+EACF;;;ADbR,OAAM,MAAOC,aAAa;EAL1BC;IAOY,sBAAiB,GAAG,IAAIH,YAAY,EAAE;IACtC,wBAAmB,GAAG,IAAIA,YAAY,EAAE;;EAE3CI,UAAU,CAACC,KAAa;IAC7B,IAAI,CAACC,KAAK,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC3B,IAAI,CAACG,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAACH,KAAK,CAAC;EACzC;EAEOI,gBAAgB,CAACL,KAAa;IACnC,IAAI,CAACM,mBAAmB,CAACF,IAAI,CAACJ,KAAK,CAAC;EACtC;;AAZWH,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAU;EAAAC;IAAAP;EAAA;EAAAQ;IAAAN;IAAAG;EAAA;EAAAI;EAAAC;EAAAC;EAAAC;IAAA;MCP1BjB,8BAAsB;MAElBA,4DAoBK;MACPA,iBAAK;;;MApBgBA,eAAU;MAAVA,mCAAU","names":["EventEmitter","i0","ListComponent","constructor","deleteTask","index","tasks","splice","deleteTaskEmitter","emit","changeTaskStatus","completeTaskEmitter","selectors","inputs","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\ITI courses\\Angular\\testing\\src\\app\\list\\list.component.ts","D:\\ITI courses\\Angular\\testing\\src\\app\\list\\list.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent {\n  @Input() tasks: string[];\n  @Output() deleteTaskEmitter = new EventEmitter();\n  @Output() completeTaskEmitter = new EventEmitter();\n\n  public deleteTask(index: number) {\n    this.tasks.splice(index, 1);\n    this.deleteTaskEmitter.emit(this.tasks);\n  }\n\n  public changeTaskStatus(index: number) {\n    this.completeTaskEmitter.emit(index);\n  }\n}\n","<div class=\"mt-5 p-4\">\n  <ul class=\"list-unstyled w-50\">\n    <li\n      *ngFor=\"let task of tasks; let i = index\"\n      class=\"p-3 bg-secondary bg-gradient d-flex justify-content-between align-items-center my-2\"\n    >\n      <span\n        class=\"text-white\"\n        [ngStyle]=\"{ 'text-decoration': task.isComplete ? 'line-through' : '' }\"\n        >{{ task.taskLabel }}</span\n      >\n      <div>\n        <button class=\"btn bg-danger text-white me-2\" (click)=\"deleteTask(i)\">\n          Delete\n        </button>\n        <button\n          class=\"btn btn-success text-white\"\n          (click)=\"changeTaskStatus(i)\"\n        >\n          {{ task.isComplete ? \"Incomplete\" : \"Complete\" }}\n        </button>\n      </div>\n    </li>\n  </ul>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}